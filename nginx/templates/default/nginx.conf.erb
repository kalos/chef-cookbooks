###
### <%= @node[:hostname] %> configuration
###
### max_clients = worker_processes * worker_connections/CPUs
<% if @node[:nginx][:worker_processor] == 0 %>
### max_clients = <%= (@node[:cpu][:total] * 2) %> * <%= @node[:nginx][:worker_connections] %>/<%= @node[:cpu][:total] %> = <%= ((@node[:cpu][:total] * 2) * (@node[:nginx][:worker_connections].to_i / @node[:cpu][:total])) %>
<% else %>
### max_clients = <%= @node[:nginx][:worker_processes] %> * <%= @node[:nginx][:worker_connections] %>/<%= @node[:cpu][:total] %> = <%= @node[:nginx][:worker_processes] * (@node[:nginx][:worker_connections].to_i / @node[:cpu][:total]) %>
<% end %>
###

user                          <%= @node[:nginx][:user] %> <%= @node[:nginx][:group] %>;
pid                           /var/run/nginx.pid;

<% if @node[:nginx][:worker_processor] == 0 %>
worker_processes              <%= @node[:cpu][:total] * 2 %>; # cpu * 2 (if ssl or gzip is enable)
<% else %>
worker_processes              <%= @node[:nginx][:worker_processes] %>;
<% end %>
worker_priority               <%= @node[:nginx][:worker_priority] %>;

error_log                     <%= @node[:nginx][:log_dir] %>/error; #debug;

# decrease number gettimeofday() syscalls
#timer_resolution              3000ms;

events {
  worker_connections          <%= @node[:nginx][:worker_connections] %>;
  use                         epoll; # Linux 2.6+
}

http {

  # general
  server_names_hash_bucket_size <%= @node[:nginx][:server_names_hash_bucket_size] %>;
  server_tokens                 <%= @node[:nginx][:server_tokens] %>;
  sendfile                      <%= @node[:nginx][:sendfile] %>;
  charset                       <%= @node[:nginx][:charset] %>;
  # disables messages in error_log about files not found on disk
  log_not_found                 <%= @node[:nginx][:log_not_found] %>;

  # timeouts
  <% if @node[:nginx][:keepalive] == "on" %>
  keepalive_timeout             <%= @node[:nginx][:keepalive_timeout] %>;
  <% end %>


  # TCP options
  tcp_nopush                    on;
  tcp_nodelay                   on;

  # compression
  <% if @node[:nginx][:gzip] == "on" %>
  gzip                          <%= @node[:nginx][:gzip] %>;
  gzip_comp_level               <%= @node[:nginx][:gzip_comp_level] %>;
  gzip_min_length               <%= @node[:nginx][:gzip_min_length] %>;
  gzip_http_version             <%= @node[:nginx][:gzip_http_version] %>;
  gzip_types                    <%= @node[:nginx][:gzip_types].join(' ') %>;
  gzip_proxied                  <%= @node[:nginx][:gzip_proxied] %>;
  # Some version of IE 6 don't handle compression well on some mime-types,
  # so just disable for them
  gzip_disable                  "MSIE [1-6].(?!.*SV1)";
  # Set a vary header so downstream proxies don't send cached gzipped
  # content to IE6
  gzip_vary                     on;
  <% else %>
  gzip                          off;
  <% end %>

  # log standard format
  log_format main
     '$remote_addr - $remote_user [$time_local] '
     '"$request" $status $bytes_sent '
     '"$http_referer" "$http_user_agent" '
     '"$gzip_ratio"';

  # mime
  include                       <%= @node[:nginx][:dir] %>/mime.types;
  default_type                  application/octet-stream;

  # errors
  recursive_error_pages         on;
  # All other errors get the generic error page
  #error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417
  #           500 501 502 503 504 505 506 507 /error_page.html;
  #location  /error_page.html {
  #    internal;
  #}

  ### include extra config (fcgi, passenger, etc)
  <% if @node[:nginx][:fcgi] == "on" %>
  # fcgi
  include <%= @node[:nginx][:dir] %>/conf.d/fastcgi_params.conf;
  <% end %>

  <% if @node[:nginx][:passenger] == "on" %>
  # passenger
  include <%= @node[:nginx][:dir] %>/conf.d/passenger.conf;
  <% end %>

  ### include virtual hosts configs
  include <%= @node[:nginx][:dir] %>/sites-enabled/*;
}
